version: '3.5'
services:
  nginx:
    restart: always
    build:
      context: ../nginx
      args:
        - DEBUG
    ports:
      - "81:80"
    depends_on:
      - adminpanel
      - adminer
    volumes:
      - ../nginx/logs:/var/log/nginx
      - ../nginx/access.d:/etc/nginx/access.d
      - django-static-admin:/static/admin
      - django-static-sport:/static/sport

  adminpanel:
    build:
      context: ../adminpage
      dockerfile: Dockerfile
      args:
        - PYTHON_VERSION
    #   Wait for postgres to startup before running server
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; python manage.py runserver 0.0.0.0:8000'
    restart: always
    volumes:
      - ../adminpage:/src
      - django-auth-preserve:/usr/local/lib/python${PYTHON_VERSION}/site-packages/django/contrib/auth/migrations/
      - django-static-admin:/static/admin
      - django-static-sport:/static/sport
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DEBUG
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_SERVER
      - SECRET_KEY
      - PROJECT_NAME
      - oauth_appID
      - oauth_shared_secret
      - oauth_authorization_baseURL
      - oauth_get_infoURL
      - oauth_tokenURL
      - oauth_end_session_endpoint

  db:
    image: db
    build:
      context: ..
      dockerfile: Dockerfile.db
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_SERVER


  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    ports:
      - "8081:8080"


volumes:
  db-data:
  django-static-admin:
  django-static-sport:
  # required to preserve change to django.contrib.auth.models.Group class.
  # (verbose_name added)
  # since Innopolis adfs provides groupsid as universal identifier
  # (group - can be either in Russian or English)
  django-auth-preserve:
